#include <MAC_Bool.hh>

#include <numeric>
#include <iostream>

#include <MAC_assertions.hh>

//----------------------------------------------------------------------------
MAC_Bool*
MAC_Bool:: create( MAC_Object* a_owner, bool val )
//----------------------------------------------------------------------------
{
   return( new MAC_Bool( a_owner, val ) ) ;
}



//----------------------------------------------------------------------------
MAC_Bool*
MAC_Bool:: create_clone( MAC_Object* a_owner ) const
//----------------------------------------------------------------------------
{
   return( new MAC_Bool( a_owner, myValue ) ) ;
}



//----------------------------------------------------------------------------
MAC_Bool:: MAC_Bool( MAC_Object* a_owner, bool val )
//----------------------------------------------------------------------------
   : MAC_Data( a_owner ),
     myValue( val )
{
   MAC_CHECK_INV( invariant() ) ;
}



//----------------------------------------------------------------------------
MAC_Bool:: ~MAC_Bool( void )
//----------------------------------------------------------------------------
{
   MAC_CHECK_INV( invariant() ) ;
}



//----------------------------------------------------------------------------
MAC_Data::Type
MAC_Bool:: data_type( void ) const
//----------------------------------------------------------------------------
{
   return( MAC_Data::Bool ) ;
}



//----------------------------------------------------------------------------
bool
MAC_Bool:: to_bool( MAC_Context const* ct ) const
//----------------------------------------------------------------------------
{
   MAC_CHECK_PRE( to_bool_PRE( ct ) ) ;
   MAC_CHECK_INV( invariant() ) ;
   return( myValue ) ;
}



//----------------------------------------------------------------------
void
MAC_Bool:: print( std::ostream& os, size_t indent_width ) const
//----------------------------------------------------------------------
{
   std::string space( indent_width, ' ' ) ;
   os << space ;
   if( myValue )
   {
      os << "true" ;
   }
   else
   {
      os << "false" ;
   }
}



//----------------------------------------------------------------------------
void
MAC_Bool:: set( bool val )
//----------------------------------------------------------------------------
{
   myValue = val ;
}
